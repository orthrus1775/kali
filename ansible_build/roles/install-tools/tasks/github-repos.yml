---
- name: "Installing useful github repos"
  git:
    repo: "{{ item.repo }}"
    dest: "{{ item.location }}"
    force: true 
  loop:
    - { repo: "https://github.com/Flangvik/SharpCollection", location: "/opt/SharpCollection" }
    - { repo: "https://github.com/danielmiessler/SecLists", location: "/opt/SecLists" }
    - { repo: "https://github.com/ropnop/windapsearch", location: "/opt/windapsearch" }
    - { repo: "https://github.com/BishopFox/sliver", location: "/opt/sliver" }
    - { repo: "https://github.com/Ne0nd0g/merlin", location: "/opt/merlin" }
    - { repo: "https://github.com/Ne0nd0g/merlin-agent", location: "/opt/merlin-agent" }
    - { repo: "https://github.com/its-a-feature/Mythic", location: "/opt/mythic" } 
    - { repo: "https://github.com/Tylous/ScareCrow", location: "/opt/scarecrow" } 
    - { repo: "https://github.com/t3l3machus/hoaxshell", location: "/opt/hoaxshell" } 
    - { repo: "https://github.com/HavocFramework/Havoc", location: "/opt/havoc" }
    - { repo: "https://github.com/0xZDH/redirect.rules.git", location: "{{ ansible_env.HOME }}/Desktop/redirector/redirect.rules" }
    - { repo: "https://github.com/mantvydasb/Red-Team-Infrastructure-Automation.git", location: "{{ ansible_env.HOME }}/Desktop/redirector/redteam-infrastructure-automation" }
    - { repo: "https://github.com/threatexpress/cs2modrewrite.git", location: "{{ ansible_env.HOME }}/Desktop/redirector/cs2modrewrite" }
    - { repo: "https://github.com/t94j0/satellite.git", location: "{{ ansible_env.HOME }}/Desktop/redirector/satellite" }
    - { repo: "https://github.com/GhostManager/Ghostwriter.git", location: "/usr/local/sbin/Ghostwriter" }
  become: true
  become_method: sudo

- name: Create temporary build directory
  ansible.builtin.tempfile:
    state: directory
  register: build_dir

- name: "Copying python script to download github releases"
  copy:
    src: "files/githubdownload.py"
    dest: "{{ build_dir.path }}/githubdownload.py"
    owner: root
    group: root
    mode: 0755
  become: true
  become_method: sudo

- name: "Downloading github releases"
  shell: "{{ build_dir.path }}/githubdownload.py {{ item.repo }} {{ item.regex }} {{ item.location }} {% if item.filename is defined %}{{ item.filename }}{% endif %}"
  loop:
    - { repo: "jpillora/chisel",  regex: "_linux_amd64.gz", location: "/opt/chisel" }
    - { repo: "jpillora/chisel",  regex: "_windows_amd64.gz", location: "/opt/chisel" }
    - { repo: "jpillora/chisel",  regex: "_darwin_amd64", location: "/opt/chisel", filename: "chisel_osx" }
    - { repo: "WithSecureLabs/chainsaw",  regex: "chainsaw_all_", location: "/opt/" }
    - { repo: "BloodHoundAD/BloodHound", regex: "BloodHound-linux-x64.zip", location: "/opt/" }
    - { repo: "dnSpy/dnSpy", regex: "net-win32.zip", location: "/usr/share/dnSpy" }
    - { repo: "dnSpy/dnSpy", regex: "net-win64.zip", location: "/usr/share/dnSpy" } 
    - { repo: "dnSpy/dnSpy", regex: "netframework.zip", location: "/usr/share/dnSpy" } 
    - { repo: "DominicBreuker/pspy", regex: "pspy32", location: "/usr/share/pspy" }
    - { repo: "DominicBreuker/pspy", regex: "pspy32s", location: "/usr/share/pspy" }
    - { repo: "DominicBreuker/pspy", regex: "pspy64", location: "/usr/share/pspy" }
    - { repo: "DominicBreuker/pspy", regex: "pspy64s", location: "/usr/share/pspy" } 
    - { repo: nicocha30/ligolo-ng", regex: "ligolo-ng_agent_0.4.4_linux_amd64.tar.gz", location: "/usr/share/ligolo-ng" }
    - { repo: "nicocha30/ligolo-ng", regex: "ligolo-ng_agent_0.4.4_windows_amd64.zip", location: "/usr/share/ligolo-ng" } 
    - { repo: nicocha30/ligolo-ng", regex: "ligolo-ng_proxy_0.4.4_linux_amd64.tar.gz", location: "/usr/share/ligolo-ng" }
    - { repo: "nicocha30/ligolo-ng", regex: "ligolo-ng_proxy_0.4.4_windows_amd64.zip", location: "/usr/share/ligolo-ng" } 
    - { repo: "t94j0/satellite", regex: "_linux_amd64.deb", location: "{{ ansible_env.HOME }}/Desktop/redirector/satellite" }
  async: 45
  poll: 0
  become: true
  become_method: sudo

- name: "Copying nim-install script to download install nim"
  copy:
    src: "files/nim-install.sh"
    dest: "{{ build_dir.path }}/nim-install.sh"
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    mode: 0755

- name: "Installing Nim"
  shell: "{{ build_dir.path }}/nim-install.sh"    

- name: "Installing winim for nim"
  shell: "nimble install winim"

- name: Remove temporary build directory
  ansible.builtin.file:
    path: "{{ build_dir.path }}"
    state: absent
  when: build_dir.path is defined

- name: "Recursively change ownership and permissions of /opt/"
  ansible.builtin.command:
    cmd: "chown -R {{ ansible_user_id }}:{{ ansible_user_id }} /opt/" 
  become: true
  become_method: sudo

- name: "Recursively change ownership and permissions of redirector"
  ansible.builtin.command:
    cmd: "chown -R {{ ansible_user_id }}:{{ ansible_user_id }} {{ ansible_env.HOME }}/Desktop/redirector/" 
  become: true
  become_method: sudo

